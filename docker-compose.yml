version: "3.3"

services:
  nginx:
    build: ./nginx
    container_name: ng03
    ports:
      - 1500:80
    volumes:
      - ./flussonic_stat/static:/app/static
    depends_on:
      - app

  app:
    build:
      context: .
    container_name: app03
    expose:
      - 8000
    volumes:
      - ./flussonic_stat:/app
      - ./flussonic_stat/static:/app/static
    env_file:
      - ./flussonic_stat/.env
    restart: unless-stopped
    depends_on:
      - db
    command: >
      sh -c "python3.8 manage.py runserver 0.0.0.0:8000"
    networks:
      - mysqlnetwork

  db:
    container_name: db03
    image: mysql:latest
    ports:
      - '3306:3306'
    command:
      - '--skip-log-bin'
    env_file:
      - .env
    restart: always
    volumes:
    - ./db_django:/var/lib/mysql
    networks:
      - mysqlnetwork

  redis-server:
    restart: always
    image: redis:4.0
    container_name: redis-server
    command: /bin/bash -c 'redis-server --appendonly yes'
    sysctls:
      - net.core.somaxconn=65535
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    mem_limit: 512m
    networks:
      - mysqlnetwork
volumes:
  static:
  mysql:
    driver: local
  redis:
    driver: local

networks:
  mysqlnetwork:
    driver: bridge
