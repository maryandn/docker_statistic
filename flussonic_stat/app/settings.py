"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from django.conf.global_settings import DATETIME_INPUT_FORMATS
from dotenv import dotenv_values

conf = dict(dotenv_values(".env"))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf.get('SECRET_KEY')
TOKEN_TG = conf.get('TOKEN_TG')
CHAT_ID_TG = conf.get('CHAT_ID_TG')
FLUSSONIC_LOGIN = conf.get('FLUSSONIC_LOGIN')
FLUSSONIC_PASSWORD = conf.get('FLUSSONIC_PASSWORD')

DB_NAME_PRODUCTIONS = conf.get("DB_NAME_PRODUCTIONS")
MYSQL_USER_PRODUCTIONS = conf.get("MYSQL_USER_PRODUCTIONS")
MYSQL_PASSWORD_PRODUCTIONS = conf.get("MYSQL_PASSWORD_PRODUCTIONS")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

def mode_db():
    if DEBUG:
        get_dict_env_value = {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': conf.get('DB_NAME_LOCAL'),
            'USER': conf.get('MYSQL_USER_LOCAL'),
            'PASSWORD': conf.get('MYSQL_PASSWORD_LOCAL'),
            'HOST': 'localhost',
        }
        get_settings_memcached = '127.0.0.1:11211'
        get_allowed_hosts = ['localhost', '127.0.0.1']
    else:
        get_dict_env_value = {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': DB_NAME_PRODUCTIONS,
            'USER': MYSQL_USER_PRODUCTIONS,
            'PASSWORD': MYSQL_PASSWORD_PRODUCTIONS,
            'HOST': 'db',
        }
        get_settings_memcached = '172.17.0.1:11211'
        get_allowed_hosts = ['stat.srv4you.net']
    return get_dict_env_value, get_settings_memcached, get_allowed_hosts

dict_env_value, settings_memcached, allowed_hosts = mode_db()

ALLOWED_HOSTS = allowed_hosts

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'corsheaders',

    'rest_framework',
    'statistic',
    'notify_channel',
    'notify_session',
    'notify_stream',
    'monitoring',
    'config',
    'core'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': dict_env_value
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'build/static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}

CORS_ORIGIN_ALLOW_ALL = True

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
        'LOCATION': settings_memcached,
        'TIMEOUT': 172800,
    }
}