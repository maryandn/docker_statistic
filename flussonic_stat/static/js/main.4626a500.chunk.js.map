{"version":3,"sources":["redux/types.js","redux/reducers/dataReducer.js","redux/reducers/rootReducer.js","index.js","App.js","redux/actions/data-actions.js"],"names":["GET_DATA","initialState","data","rootReducer","combineReducers","statData","state","action","type","payload","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","exact","path","component","props","dispatch","useDispatch","useSelector","console","log","series","name","options","chart","height","width","toolbar","show","xaxis","stroke","curve","title","text","align","markers","size","shape","token","match","params","useEffect","url","fullUrl","a","axios","response","dataAction","document","getElementById"],"mappings":"kMAAaA,EAAW,W,iECElBC,EAAe,CACjBC,KAAM,ICAIC,EAAcC,YAAgB,CACxCC,SDEuB,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCACzD,OAAQA,EAAOC,MACX,KAAKR,EACD,OAAO,2BACAM,GADP,IACcJ,KAAMK,EAAOE,UAE/B,QACI,OAAOH,MEHbI,EAAQC,YAAYR,EAAaS,YACnCC,YACIC,OAIRC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,SAASC,UCf5B,SAACC,GAEZ,IAAMC,EAAWC,cACXjB,EAAWkB,aAAY,SAAAjB,GAAK,OAAIA,EAAMD,SAASH,QACrDsB,QAAQC,IAAIpB,GACZ,IAAMC,EAAQ,CACVoB,OAAQ,CACJ,CACIC,KAAM,SACNzB,KAAMG,IAGduB,QAAS,CACLC,MAAO,CACHC,OAAQ,IACRC,MAAO,OACPvB,KAAM,OACNwB,QAAS,CACLC,MAAM,IAGdC,MAAO,CACH1B,KAAM,YAEV2B,OAAQ,CACJC,MAAO,SACPL,MAAO,GAEXM,MAAO,CACHC,KAAM,mBACNC,MAAO,QAEXC,QAAS,CACLC,KAAM,EACNC,MAAO,YAKbC,EAAQvB,EAAMwB,MAAMC,OAAO3C,KAQjC,OANA4C,qBAAU,WACNzB,EC5CkB,SAAC0B,GACvB,IACMC,EADU,8BACUD,EAC1B,8CAAO,WAAM1B,GAAN,eAAA4B,EAAA,+EAEwBC,IAAMF,GAF9B,OAEOG,EAFP,OAGC9B,EAAS,CAACb,KAAMR,EAAUS,QAAS0C,EAASjD,OAH7C,gDAKCmB,EAAS,CAACb,KAAMR,EAAUS,QAAS,KALpC,yDAAP,sDDyCa2C,CAAWT,MACrB,IAEHnB,QAAQC,IAAInB,GAGR,cAAC,IAAD,CAAgBsB,QAAStB,EAAMsB,QAASF,OAAQpB,EAAMoB,OAAQlB,KAAK,OAAOsB,OAAQ,eD7BxFuB,SAASC,eAAe,W","file":"static/js/main.4626a500.chunk.js","sourcesContent":["export const GET_DATA = 'GET_DATA'","import {GET_DATA} from \"../types\";\n\nconst initialState = {\n    data: []\n}\n\nexport const dataReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DATA:\n            return {\n                ...state, data: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {combineReducers} from \"redux\";\nimport {dataReducer} from \"./dataReducer\";\n\nexport  const rootReducer = combineReducers({\n    statData: dataReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport App from './App';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport thunk from \"redux-thunk\";\nimport {rootReducer} from \"./redux/reducers/rootReducer\";\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    )\n))\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route exact path='/:data' component={App} />\n            </Switch>\n        </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {dataAction} from \"./redux/actions/data-actions\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport default (props) => {\n\n    const dispatch = useDispatch()\n    const statData = useSelector(state => state.statData.data)\n    console.log(statData);\n    const state = {\n        series: [\n            {\n                name: \"Online\",\n                data: statData\n            }\n        ],\n        options: {\n            chart: {\n                height: 380,\n                width: \"100%\",\n                type: \"area\",\n                toolbar: {\n                    show: false\n                }\n            },\n            xaxis: {\n                type: 'datetime'\n            },\n            stroke: {\n                curve: 'smooth',\n                width: 1,\n            },\n            title: {\n                text: 'Connections user',\n                align: 'left'\n            },\n            markers: {\n                size: 0,\n                shape: 'square'\n            }\n        }\n    }\n\n    const token = props.match.params.data\n\n    useEffect(() => {\n        dispatch(dataAction(token))\n    }, [])\n\n    console.log(state);\n\n    return (\n        <ReactApexChart options={state.options} series={state.series} type=\"line\" height={350}/>\n    )\n}\n","import {GET_DATA} from \"../types\";\nimport axios from \"axios\";\n\nexport const dataAction = (url) => {\n    const baseUrl = 'http://localhost:8000/stat/'\n    const fullUrl = baseUrl + url\n    return async dispatch => {\n        try {\n            const response = await axios(fullUrl)\n            dispatch({type: GET_DATA, payload: response.data})\n        } catch (e) {\n            dispatch({type: GET_DATA, payload: []})\n        }\n    }\n}"],"sourceRoot":""}